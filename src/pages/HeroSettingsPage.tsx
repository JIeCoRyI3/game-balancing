import { useState, useEffect } from 'react';
import { useGame } from '../context/GameContext';
import './HeroSettingsPage.css';

function HeroSettingsPage() {
  const { heroSettings, updateHeroSettings } = useGame();
  const [formData, setFormData] = useState(heroSettings);

  useEffect(() => {
    setFormData(heroSettings);
  }, [heroSettings]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    updateHeroSettings(formData);
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ—Ä–æ—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
  };

  const handleChange = (field: keyof typeof formData, value: number) => {
    setFormData({ ...formData, [field]: value });
  };

  return (
    <div className="hero-settings-page">
      <div className="page-header">
        <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ì–µ—Ä–æ—è</h1>
        <p>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–¥–æ—Ä–æ–≤—å—è, –º–∞–Ω—ã –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –¥–ª—è –≥–µ—Ä–æ–µ–≤</p>
      </div>

      <div className="settings-container">
        <form onSubmit={handleSubmit} className="settings-form">
          <div className="stats-preview">
            <div className="stat-preview-card health">
              <div className="stat-icon">‚ù§Ô∏è</div>
              <div className="stat-info">
                <div className="stat-label">–ó–¥–æ—Ä–æ–≤—å–µ</div>
                <div className="stat-value">{formData.health}</div>
              </div>
            </div>

            <div className="stat-preview-card mana">
              <div className="stat-icon">üíß</div>
              <div className="stat-info">
                <div className="stat-label">–ú–∞–Ω–∞</div>
                <div className="stat-value">{formData.mana}</div>
              </div>
            </div>

            <div className="stat-preview-card stamina">
              <div className="stat-icon">‚ö°</div>
              <div className="stat-info">
                <div className="stat-label">–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å</div>
                <div className="stat-value">{formData.stamina}</div>
              </div>
            </div>
          </div>

          <div className="form-group">
            <label htmlFor="health">
              –ó–¥–æ—Ä–æ–≤—å–µ (HP)
              <span className="label-hint">–ë–∞–∑–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –≥–µ—Ä–æ—è</span>
            </label>
            <div className="slider-container">
              <input
                id="health"
                type="range"
                min="10"
                max="500"
                step="10"
                value={formData.health}
                onChange={(e) => handleChange('health', parseInt(e.target.value))}
                className="slider"
              />
              <input
                type="number"
                value={formData.health}
                onChange={(e) => handleChange('health', parseInt(e.target.value))}
                className="number-input"
                min="1"
              />
            </div>
          </div>

          <div className="form-group">
            <label htmlFor="mana">
              –ú–∞–Ω–∞
              <span className="label-hint">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Ä—Ç</span>
            </label>
            <div className="slider-container">
              <input
                id="mana"
                type="range"
                min="0"
                max="200"
                step="5"
                value={formData.mana}
                onChange={(e) => handleChange('mana', parseInt(e.target.value))}
                className="slider"
              />
              <input
                type="number"
                value={formData.mana}
                onChange={(e) => handleChange('mana', parseInt(e.target.value))}
                className="number-input"
                min="0"
              />
            </div>
          </div>

          <div className="form-group">
            <label htmlFor="stamina">
              –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å
              <span className="label-hint">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π</span>
            </label>
            <div className="slider-container">
              <input
                id="stamina"
                type="range"
                min="0"
                max="200"
                step="5"
                value={formData.stamina}
                onChange={(e) => handleChange('stamina', parseInt(e.target.value))}
                className="slider"
              />
              <input
                type="number"
                value={formData.stamina}
                onChange={(e) => handleChange('stamina', parseInt(e.target.value))}
                className="number-input"
                min="0"
              />
            </div>
          </div>

          <button type="submit" className="btn-primary btn-large">
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </button>
        </form>

        <div className="settings-info">
          <div className="info-card">
            <h3>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</h3>
            <p>
              –≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ—Ä–æ–µ–≤ –≤ —Å–∏–º—É–ª—è—Ü–∏–∏ –±–æ—è.
              –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏—Ö –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–µ—Ä–æ—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏–º—É–ª—è—Ü–∏–∏.
            </p>
          </div>

          <div className="info-card">
            <h3>‚öñÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            <ul>
              <li>–ó–¥–æ—Ä–æ–≤—å–µ: 50-200 –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –±–æ–µ–≤, 200-500 –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö</li>
              <li>–ú–∞–Ω–∞: –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –∫–∞—Ä—Ç</li>
              <li>–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: –û–±—ã—á–Ω–æ —Ä–∞–≤–Ω–∞ –∏–ª–∏ –º–µ–Ω—å—à–µ –º–∞–Ω—ã</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}

export default HeroSettingsPage;
